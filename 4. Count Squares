Consider a sample space S consisting of all perfect squares starting from 1, 4, 9 and so on. You are given a number N, you have to output the number of integers less than N in the sample space S.

 

Example 1:

Input :
N = 9
Output:
2
Explanation:
1 and 4 are the only Perfect Squares
less than 9. So, the Output is 2.
Example 2:

Input :
N = 3
Output:
1
Explanation:
1 is the only Perfect Square
less than 3. So, the Output is 1.


class Solution {
  public:
  
  
    int sqroot(int  N)
    {
        
        int start =1, end=N;
        
        while(start<=end)
        {
            int mid= start +(end-start)/2;
            
            if(mid<= N/mid)
            {
                if(N%mid==0 && mid== N/mid)
                {
                    return mid;
                }
                start= mid+1;
            }
            else{
                end = mid-1;
            }
            
        }
        return start;
    }
    int countSquares(int N) {
        // code here
        // finding out the square root of number with binary search
        int root= sqroot(N);
        
        return root-1;
    }
};
