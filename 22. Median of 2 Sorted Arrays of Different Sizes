Given two sorted arrays array1 and array2 of size m and n respectively. Find the median of the two sorted arrays.

Example 1:

Input:
m = 3, n = 4
array1[] = {1,5,9}
array2[] = {2,3,6,7}
Output: 5
Explanation: The middle element for
{1,2,3,5,6,7,9} is 5
Example 2:

Input:
m = 2, n = 4
array1[] = {4,6}
array2[] = {1,2,3,5}
Output: 3.5


//User function Template for C++

class Solution{
    public:
    double MedianOfArrays(vector<int>& array1, vector<int>& array2)
    {
        // Your code goes here
        
        // check which one is smaller array 
        int n1 = array1.size();
        int n2 = array2.size();
        
        if (n2 < n1)
            return MedianOfArrays(array2, array1);
            
        int low = 0, high = n1;
        while (low <= high) {
            
            int cut1 = (low + high) / 2;
            int cut2 = (n1 + n2 + 1) / 2 - cut1;
            
            int left1 = (cut1 == 0) ? INT_MIN : array1[cut1 - 1];
            int left2 = (cut2 == 0) ? INT_MIN : array2[cut2 - 1];
            
            int right1 = (cut1 == n1) ? INT_MAX : array1[cut1];
            int right2 = (cut2 == n2) ? INT_MAX : array2[cut2]; 
            
            if ( left1 <= right2 and left2 <= right1) {
                if ( (n1 + n2) % 2 == 0 ) {
                    return ( max(left1, left2) + min(right1, right2) ) / 2.0;
                }
                else {
                    return max(left1, left2);
                }
            }
            else if ( left1 > right2 )
                high = cut1 - 1;
            else
                low = cut1 + 1;
        }
        return 0.0;
    }
};
