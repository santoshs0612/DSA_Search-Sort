Given a sorted array arr containing n elements with possibly duplicate elements, the task is to find indexes of first and last occurrences of an element x in the given array.

Example 1:

Input:
n=9, x=5
arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
Output:  2 5
Explanation: First occurrence of 5 is at index 2 and last
             occurrence of 5 is at index 5. 
 

Example 2:

Input:
n=9, x=7
arr[] = { 1, 3, 5, 5, 5, 5, 7, 123, 125 }
Output:  6 6 




vector<int> find(int arr[], int n , int x )
{
    // code here
    
    // Finding out the first occurance 
    
    int first=-1, last =-1;
    
    int start=0, end=n;
    
    while(start<=end)
    {
        int mid = start +(end-start)/2;
        
        if(arr[mid]==x)
        {
            first=mid;
            end= mid-1;
        }
        else if(arr[mid]>x)
        {
            end= mid-1;
        }
        else {
            start= mid+1;
        }
    }
    // finding out last occurance;

    start=0;
    end=n;
    
    while(start<=end)
    {
        int mid = start +(end-start)/2;
        
        if(arr[mid]==x)
        {
            last=mid;
            start= mid+1;
        }
        else if(arr[mid]>x)
        {
            end= mid-1;
        }
        else {
            start= mid+1;
        }
    }
    
    return {first,last};
    
}
