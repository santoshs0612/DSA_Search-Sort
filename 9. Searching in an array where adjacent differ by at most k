A step array is an array of integers where each element has a difference of at most k with its neighbor. Given a key x, we need to find the index value of x if multiple elements exist, and return the first occurrence of the key.

Example 1:

Input : arr[ ] = {4, 5, 6, 7, 6}, K = 1 
        and X = 6
Output : 2
Explanation:
In an array arr 6 is present at index 2.
So, return 2.

Example 2:

Input : arr[ ] = {20 40 50}, K = 20 
        and X = 70
Output :  -1 




// x is the element to be searched in arr[0..n-1]
// such that all elements differ by at-most k.
int search(int arr[], int n, int x, int k)
{
    // Complete the function
    // int ind=-1;
    
    // if(n==1)
    // {
    //     if(arr[0]==x)
    //     {
    //         return 0;
    //     }
    //     else {
    //     return -1;
    //     }
    // }
    // for(int i=0;i<n;i++)
    // {
    //     if(arr[i]==x)
    //     {
    //         if(i-1>=0 && i+1<n)
    //         {
    //             if(abs(arr[i]-arr[i-1])<=k && abs(arr[i+1]-arr[i])<=k)
    //             {
    //                 ind=i;
    //                 break;
    //             }
    //         }
    //         if(i==0)
    //         {
    //             if(abs(arr[i+1]-arr[i])<=k)
    //             {
    //                 ind=i;
    //                 break;
    //             }
    //         }
    //         if(i==n-1)
    //         {
    //             if(abs(arr[i]-arr[i-1])<=k)
    //             {
    //                 ind=i;
    //                 break;
    //             }
    //         }
    //     }
    // }
    // return ind;
    
    int index =0;
    
    while(index<n)
    {
        
        if(arr[index]==x)
        {
            return index;
        }
        
        int step = abs((arr[index]-x)/k);
        
        index= index+max(step,1);
    }
    return -1;
}    	
